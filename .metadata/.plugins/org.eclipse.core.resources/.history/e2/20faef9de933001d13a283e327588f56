package database;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import modelos.Persona;

public class PersonaTable {
	
	private DriverConexion driverConexion;

	public void insertarPersona(Persona persona) {
		InsertarModificarDB insertar = new InsertarModificarDB();
		try{
			String s = "INSERT INTO persona VALUES ('"+persona.getDni()+"', "+persona.getNombre()+", '"+persona.getApellido()+"' ,'"+persona.getCantidadServicios()+"');";
			insertar.modificarInsertar(s, driverConexion);
		}
		catch(Exception e) {
			System.out.println("Error al insertar");
		}
	}
	
	public void borrarPersona(Persona persona) {
		InsertarModificarDB borrar = new InsertarModificarDB();
		try{
			String s = "DELETE FROM persona WHERE DNI = '"+persona.getDni()+"';";
			borrar.modificarInsertar(s, driverConexion);
		}
		catch(Exception e) {
			System.out.println("Error al borrar");
		}
	}
	
	public void actualizarPersona(Persona persona) {
		InsertarModificarDB actualizar = new InsertarModificarDB();
		try{
			String s = "UPDATE persona SET cantServicios = "+persona.getCantidadServicios()+"  WHERE DNI = '"+persona.getDni()+"';";
			actualizar.modificarInsertar(s, driverConexion);
		}
		catch(Exception e) {
			System.out.println("Error al actualizar");
		}
	}
	
	public ArrayList<Persona> getPersonas(DriverConexion driverConexion) throws SQLException{
		ArrayList<Persona> personas = new ArrayList<Persona>();
		String consulta = "SELECT * FROM persona";
		
		ResultSet rs = driverConexion.getConexionBD().createStatement().executeQuery(consulta);
		ResultSetMetaData metaData = rs.getMetaData();
		int numColumna = metaData.getColumnCount();
		while(rs.next()) {
			Persona persona = new Persona();
			for (int columnIndex = 1; columnIndex <= numColumna; columnIndex++) {
				switch (columnIndex) {
					case 1: {
						persona.setDni((Integer) rs.getObject(columnIndex));
						break;
					}
					case 2: {
						persona.setNombre(String.valueOf(rs.getObject(columnIndex)));
						break;
					}
					case 3: {
						persona.setApellido(String.valueOf(rs.getObject(columnIndex)));
						break;
					}
					case 4: {
						persona.setCantidadServicios((Integer) rs.getObject(columnIndex));
						break;
					}
				}
	        }
			personas.add(persona);
		}
		return personas;
	}
	
}
